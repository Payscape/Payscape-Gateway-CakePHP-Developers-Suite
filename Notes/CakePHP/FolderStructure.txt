	App::import('PayscapeAPI');
	App::import('Payscape');


To clarify further, 
Lib
is recommended for libraries that you write yourself. 
This may just be a few classes or entire libraries. 
Vendor is recommended for libraries or scripts that you may download from github for instance. Plugin is strictly for cakephp framework plugins.

Regarding Lib vs Vendor for you own scripts or 3rd party scripts there is no difference 
that I am aware of. I have put my own scripts in both as well as 3rd party scripts in 
both locations and it hasn't made any difference. 
It's just a recommended way to organize your files.


You can load your scripts from Lib or Vendor using App::import() 
which is the same as require_once(). 

To load framework files or your own 
scripts that follow cakephp conventions, you would use App::uses(). 
This uses the paths defined using App::path() or App::build() to find the files.


	THE APP FOLDER

CakePHP’s app folder is where you will do most of your application development. 
Let’s look a little closer at the folders inside of app.

Config
Holds the (few) configuration files CakePHP uses. Database connection details, bootstrapping, core configuration files and more should be stored here.

Console
Contains the console commands and console tasks for your application. This directory can also contain a Templates directory to customize the output of bake. For more information see Console and Shells.

Controller
Contains your application’s controllers and their components.

Lib
Contains 1st party libraries that do not come from 3rd parties or external vendors. This allows you to separate your organization’s internal libraries from vendor libraries.

Locale
Stores string files for internationalization.

Model
Contains your application’s models, behaviors, and datasources.

Plugin
Contains plugin packages.

Test
This directory contains all the test cases, and test fixtures for your application. The Test/Case directory should mirror your application and contain one or more test cases per class in your application. For more information on test cases and test fixtures refer to the Testing documentation.

tmp
This is where CakePHP stores temporary data. The actual data it stores depends on how you have CakePHP configured, but this folder is usually used to store model descriptions, logs, and sometimes session information.

Make sure that this folder exists and that it is writable, otherwise the performance of your application will be severely impacted. In debug mode, CakePHP will warn you if it is not the case.

Vendor
Any third-party classes or libraries should be placed here. Doing so makes them easy to access using the App::import(‘vendor’, ‘name’) function. Keen observers will note that this seems redundant, as there is also a vendors folder at the top level of our directory structure. We’ll get into the differences between the two when we discuss managing multiple applications and more complex system setups.

View
Presentational files are placed here: elements, error pages, helpers, layouts, and view files.

webroot
In a production setup, this folder should serve as the document root for your application. 
Folders here also serve as holding places for CSS stylesheets, images, and JavaScript files.

