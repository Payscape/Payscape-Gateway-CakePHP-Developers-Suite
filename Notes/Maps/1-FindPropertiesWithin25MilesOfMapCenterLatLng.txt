
This is the magic formula, 
right now it is only finding 
Properties with NULL for lat / long

SELECT id, ( 3959 * acos( cos( radians(37) ) * cos( radians( latitude ) ) * cos( radians( longitude ) - radians(-122) ) + sin( radians(37) ) * sin( radians( latitude ) ) ) ) AS distance 
FROM properties HAVING distance < 25 OR distance IS NULL ORDER BY distance LIMIT 0 , 20;

SELECT id, ( 3959 * acos( cos( radians(37) ) * cos( radians( latitude ) ) * cos( radians( longitude ) - radians(-122) ) + sin( radians(37) ) * sin( radians( latitude ) ) ) ) AS distance 
FROM properties

this gets us the distance measurement

SELECT id, ( 3959 * acos( cos( radians(37) ) * cos( radians( latitude ) ) * cos( radians( longitude ) - radians(-122) ) + sin( radians(37) ) * sin( radians( latitude ) ) ) ) AS distance 
FROM properties WHERE distance < 25


SELECT id ( 3959 * acos( cos( radians(37) ) * cos( radians( latitude ) ) * cos( radians( longitude ) - radians(-122) ) + sin( radians(37) ) * sin( radians( latitude ) ) ) ) AS distance,
latitude, longitude 
FROM properties HAVING distance < 25 OR distance IS NULL AND (latitude IS NOT NULL AND longitude IS NOT NULL)  ORDER BY distance LIMIT 0 , 20

this produces

these properties are 
all duds. they have no 
latitude / longitude values

(57,
130,
131,
132,
133,
134,
136,
136,
137,
138,
225,
712,
129,
125,
104,
58,
59,
69,
70,
71)

SELECT * FROM properties
WHERE id IN
(57,
130,
131,
132,
133,
134,
136,
136,
137,
138,
225,
712,
129,
125,
104,
58,
59,
69,
70,
71)




--------------------------
data

CREATE TABLE `markers` (
  `id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY ,
  `name` VARCHAR( 60 ) NOT NULL ,
  `address` VARCHAR( 80 ) NOT NULL ,
  `lat` FLOAT( 10, 6 ) NOT NULL ,
  `lng` FLOAT( 10, 6 ) NOT NULL
) ENGINE = MYISAM ;

Frankie Johnnie & Luigo Too,"939 W El Camino Real, Mountain View, CA",37.386339,-122.085823
Amici's East Coast Pizzeria,"790 Castro St, Mountain View, CA",37.38714,-122.083235
Kapp's Pizza Bar & Grill,"191 Castro St, Mountain View, CA",37.393885,-122.078916
Round Table Pizza: Mountain View,"570 N Shoreline Blvd, Mountain View, CA",37.402653,-122.079354
Tony & Alba's Pizza & Pasta,"619 Escuela Ave, Mountain View, CA",37.394011,-122.095528
Oregano's Wood-Fired Pizza,"4546 El Camino Real, Los Altos, CA",37.401724,-122.114646


--------------------------------
for 37 lat, -122 lng

This is the formula
--------------------------------

Finding Locations with MySQL

To find locations in your markers table that are within 
a certain radius distance of a given latitude/longitude, 
you can use a SELECT statement based on the Haversine formula. 
The Haversine formula is used generally for computing great-circle distances 
between two pairs of coordinates on a sphere. 

An in-depth mathemetical explanation is given by Wikipedia 
and a good discussion of the formula as it relates to programming is on Movable Type's site.



Here's the SQL statement that will find the closest 20 locations that are within a radius of 25 miles to the 
37, -122 coordinate. It calculates the distance based on the latitude/longitude of that row and 
the target latitude/longitude, and then asks for only rows where the distance value is less than 25, 
orders the whole query by distance, and limits it to 20 results. To search by kilometers instead of miles, 
replace 3959 with 6371.

--------------------
MySQL FORMULA
--------------------
this one works, but delivers NULL for distance
SELECT id, ( 3959 * acos( cos( radians(37) ) * cos( radians( latitude ) ) * cos( radians( longitude ) - radians(-122) ) + sin( radians(37) ) * sin( radians( latitude ) ) ) ) AS distance 
FROM properties HAVING distance < 25 OR distance IS NULL ORDER BY distance LIMIT 0 , 20

SELECT id, latitude ( 3959 * acos( cos( radians(37) ) * cos( radians( latitude ) ) * cos( radians( longitude ) - radians(-122) ) + sin( radians(37) ) * sin( radians( latitude ) ) ) ) AS distance 
FROM properties HAVING distance < 25 OR distance IS NULL ORDER BY distance LIMIT 0 , 20


SELECT id, ( 3959 * acos( cos( radians(37) ) * cos( radians( lat ) ) * cos( radians( lng ) - radians(-122) ) + sin( radians(37) ) * sin( radians( lat ) ) ) ) 
AS distance FROM markers HAVING distance < 25 ORDER BY distance LIMIT 0 , 20; 

for some reason here we get a dud result. could it be that our Property lat / lng calcs are innacurrate?
SELECT id, ( 3959 * acos( cos( radians(33) ) * cos( radians( latitude ) ) * cos( radians( longitude ) - radians(-84) ) + sin( radians(33) ) * sin( radians( latitude ) ) ) ) AS distance FROM properties HAVING distance < 25 ORDER BY distance LIMIT 0 , 20;


SELECT id, ( 3959 * acos( cos( radians(37) ) * cos( radians( latitude ) ) * cos( radians( lng ) - radians(-122) ) + sin( radians(37) ) * sin( radians( lat ) ) ) ) AS distance 
FROM markers HAVING distance < 25 OR distance IS NULL ORDER BY distance LIMIT 0 , 20;


wait a minute. 
Are latitude and longitude indexed?
I'll bet they are not!!!


THIS PRODUCES RESULTS, BUT distance is NULL
SELECT properties.id, properties.latitude, properties.longitude ( 3959 * acos( cos( radians(37) ) * cos( radians( properties.latitude ) ) * cos( radians( properties.longitude ) - radians(-122) ) + sin( radians(37) ) * sin( radians( properties.latitude ) ) ) ) AS distance 
FROM properties HAVING distance < 25 OR distance IS NULL ORDER BY distance LIMIT 0 , 20;

