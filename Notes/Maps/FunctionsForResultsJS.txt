in ./results.js

line 34 added refresh_results();

line 126 this got the tab MAP working

	var timeout_map;
	google.maps.event.addListener(map, 'bounds_changed', function () {
	window.clearTimeout(timeout_map);
	timeout_map = window.setTimeout(function () {
		map_update(map.getBounds( ));
		refresh_results();

		});
	}, 500); //time in ms, that will reset if next 'bounds_changed' call is send, otherwise code will be executed after that time is up
	
line 445 added the #smallMarkers selector, this got the inset map working

	if (sm_markers) {
		for (i in sm_markers) {
			if ( ! sm_markers.hasOwnProperty(i)) {
				
				continue;
			}
			$("#smallMarkers").empty().append("/nl/[2] "+sm_markers[i]);
			sm_markers[i].setMap(null);
		}
	}
	sm_markers = false;	
	
line 457 added the same for large markers

	if (lg_markers) {
		for (i in lg_markers) {
			if ( ! lg_markers.hasOwnProperty(i)) {
				continue;
			}
			$("#largeMarkers").empty().append("<br>1 "+sm_markers[i]);
			lg_markers[i].setMap(null);
		}
	}
	lg_markers = false;	


HTML

		<!-- helpers for sm_map and map -->
<br>small markers<span style="background-color:#00ff00;" id="smallMarkers"></span>
<br>large markers<span style="display:background-color:#ffffff;" id="largeMarkers"></span>
<br>lat<input type="text" name="lon">lon:
<br>lat<input type="text" name="lat">lat: 

we use this text boxes, or <textarea></textarea> with 

<!-- helpers for sm_map and map -->
<div>
small markers
<textarea id="smallMarkers" name="smallMarkers"></textarea>
</div>
<div>
large markers
<textarea id="smallMarkers" name="smallMarkers"></textarea>

</div>

JS
// we want to redo the search if the map is moved in the inset.

//var map = new google.maps.Map( document.getElementById('sm_map'), myOptions );
// we can use this if we want to display lat / long

/*
google.maps.event.addListener(map, 'idle', function() {
	 var bounds = sm_map.getBounds();
	 var sw = bounds.getSouthWest();
	 var ne = bounds.getNorthEast();
	 alert("minimum lat of current map view: " + sw.lat());
	});
*/
// we want to fire a refresh of the search if the map is moved

/*
function fireIfLastEvent()
{
    if (lastEvent.getTime() + 500 <= new Date().getTime())
    {
        alert('i am cool');
    }
}

function scheduleDelayedCallback()
{
    lastEvent = new Date();
    setTimeout(fireIfLastEvent, 500);
}

event.addListener(map, "bounds_changed", scheduleDelayedCallback);
*/

// looks like map is the map on the tab. 
// sm_map is the map in the inset.

// for large map
var timeout_map;
google.maps.event.addListener(map, 'bounds_changed', function () {
window.clearTimeout(timeout_map);
timeout_map = window.setTimeout(function () {
	map_update(map.getBounds( ));
	refresh_results();
	
//	alert("refresh results, map_update map!");

	//do stuff on event
	});
}, 500); //time in ms, that will reset if next 'bounds_changed' call is send, otherwise code will be executed after that time is up

// for small map
var timeout_sm_map;
google.maps.event.addListener(sm_map, 'bounds_changed', function () {
window.clearTimeout(timeout_sm_map);
timeout_sm_map = window.setTimeout(function () {
	map_update(sm_map.getBounds( ));
	refresh_results();
//	alert("refresh results, map_update sm_map!");
	//do stuff on event
	});
}, 500); //time in ms, that will reset if next 'bounds_changed' call is send, otherwise code will be executed after that time is up
