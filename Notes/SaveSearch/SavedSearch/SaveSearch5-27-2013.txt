	function save_search() {
		
		$message = "Please enter a title for your search";
		
		$this->set('message', $message);
		
		$search_values = array(
				'start_date'=>'',
				'end_date'=>'',
				'sleepingcapacity'=>'',
				'rate_by'=>'',
				'daily_rate_min'=>'',
				'daily_rate_max'=>'',
				'bedrooms_min'=>'',
				'bedrooms_max'=>'',
				'bathrooms_min'=>'',
				'bathrooms_max'=>'',
				'square_foot_min'=>'',
				'square_foot_max'=>'',
				'amenities'=>array(),
				'destination'=>'',
				'city'=>'',
				'state'=>'',
				'state_abbr'=>'',
				'country'=>'',
				'country_abbr'=>'',
				'latitude'=>'',
				'longitude'=>'',
		
		);
		
		// make sure this is a valid search for this user
	if ( ! empty($this->request->data['Search']['id'])) {
			$this_search = $this->Search->find('first', array(
					'conditions' => array(
							'Search.id' => $this->request->data['Search']['id'],
					),
			));
		
			if ( ! $this_search || ! ((int) $this->user['User']['id'] === (int) $this_search['Search']['user_id'])) {
				$this->Session->setFlash('Invalid Search', 'default', 's');
				$this->redirect(array( ));
			}
		}// Search.id
		
		
		
	//	$this->set('type', $type);
		
		if ( ! empty($this->request->data)) {			
			/* for testing */
		//	debug($this->data);
		//	exit();
		

			
			//if ( ! empty($this->request->data['Search']['type']) && ('link' == $this->request->data['Search']['type'])) {

			
				
				$search = $this->request->data;
				unset($search['Search']['type']);
				
				$search_values = $search;

				parse_str(urldecode($search['Search']['data']), $data);
		//		$data = $data['data']['Search'];
				
				$data = $search['Search']['data'];

				$keep = array(
					'start_date',
					'end_date',
					'sleeping_capacity',
					'bedrooms',
					'bathrooms',
					'square_footage',
					'daily_rate',
					'amenities',
										
 				);

				$clean_data = array( );
				foreach ($keep as $key) {
					if ( ! empty($data[$key])) {
						$clean_data[$key] = $data[$key];
					}
				}

				if (empty($clean_data['amenities'])) {
					$clean_data['amenities'] = array( );
				}
				
				//catch destination variables

				parse_str(urldecode($search['Search']['go']), $go);
				$go = $go['go']['Search'];
				
	

				
				$keepgo = array(
					'destination',
					'city',
					'state',
					'state_abbr',
					'country',
					'country_abbr',
					'latitude',
					'longitude'	
				
				);
				
				$clean_go = array( );
				foreach ($keepgo as $key) {
					if ( ! empty($go[$key])) {
						$clean_go[$key] = $go[$key];
					}
				}				
				
			
				 echo "<br>Data 531: <br>";
				echo "<pre>";
				debug($clean_data);
				echo "<br>Go 534:<br>";
				debug($clean_go);
				echo "<pre>";
				exit();
		

				$search['Search']['data'] = serialize($clean_data);
				$search['Search']['go'] = serialize($clean_go);
				$search['Search']['user_id'] = $this->user['User']['id'];


				if($this->Search->save($search)){
				
					$search_id = $this->Search->id;
				
					$saved_search = $this->Search->find('first', array(
						'conditions' => array(
							'Search.id' => $search_id,
						),
					)); 
				$message = isset($this->request->data['Search']['id']) ? "Your Saved Search has updated successfully" : "Your 354 Saved Search has created successfully";
				$this->Session->setFlash($message, 'default', 's');

				$return_search = $data;
				$return_search['saved_search_id'] = $saved_search['Search']['id'];

				$this->Session->write('Search.form', $return_search);

				$this->redirect(array('controller' => 'searches', 'action' => 'results'));
				} else {
					$message = "Validation error";
					$this->set('message', $message);
					$this->set('search', $search_values);
				}
			//}

// this should be the end of save new search
// why is search being redfined here?
			$search = $this->request->data;
			
	

			
			if (empty($search['Search']['data']['amenities'])) {
				$search['Search']['data']['amenities'] = array( );
			}

			$search['Search']['data'] = serialize($search['Search']['data']);
			$search['Search']['go'] = serialize($search['Search']['go']);
				
			$search['Search']['user_id'] = $this->user['User']['id'];
	//		unset($search['Search']['go']); // why unset is go being unset?

			$saved_search = $this->Search->save($search);
			$message = isset($this->request->data['Search']['id']) ? "Your Saved Search has updated successfully" : "Your Saved Search has been Submitted.";
			$this->Session->setFlash($message, 'default', 's');
			
			

			// for whatever reason, the destination loses the "go" portion of the array
			// when the icon button is pressed  =\
			
			
			if ( ! empty($this->request->data['Search']['destination'])) {
				$this->request->data['Search']['go']['destination'] = $this->request->data['Search']['destination'];
				unset($this->request->data['Search']['destination']);
			}

			if (empty($this->request->data['Search']['go']['destination'])) {
				//$this->redirect(array( ));
			}
			else 
			{
				$this->_setSearchCriteria( );

				$return_search = $this->request->data['Search'];
				$return_search['saved_search_id'] = $saved_search['Search']['id'];

				$return_search = array_merge($return_search, $return_search['data']);
				unset($return_search['data']);

				$return_search = array_merge($return_search, $return_search['go']);
				unset($return_search['go']);

				$this->Session->write('Search.form', $return_search);

				$this->redirect(array('controller' => 'searches', 'action' => 'results'));

			}

		}// ! empty request data
		else 
		{
			$this->request->data['Search']['data'] = array(
				'bedrooms' => array(
					'min' => 1,
					'max' => 10,
				),
				'bathrooms' => array(
					'min' => 1,
					'max' => 10,
				),
				'square_footage' => array(
					'min' => 500,
					'max' => 12000,
				),
				'daily_rate' => array(
					'min' => 0,
					'max' => 2000,
				),
			);
		}// empty search data

		$this->set('savedsearches', $this->Search->find('all', array('conditions' => array('user_id' => $this->user['User']['id']))));
		$this->set('user_info', $this->user);
		$this->_setSelects(true);
	}// end save_search