<div class="search-category">
                    <div class="category-inputs">
                        <div class="row">
                            <?php echo $this->Form->input('Search.bedrooms.min', array('type' => 'hidden')); ?>
                            <?php echo $this->Form->input('Search.bedrooms.max', array('type' => 'hidden')); ?>
                            <label class="block-label">Bedrooms</label>
                            <span id="bedrooms">
                                <div id="BedMin" class="min"></div><div id="BedMax" class="max"></div>
                            </span>
                            <div id="slider-range-Bed"></div>
                        </div>
                        <div class="row">
                            <?php echo $this->Form->input('Search.bathrooms.min', array('type' => 'hidden')); ?>
                            <?php echo $this->Form->input('Search.bathrooms.max', array('type' => 'hidden')); ?>
                            <label class="block-label">Bathrooms</label>
                            <span id="bathrooms">
                                <div id="BathMin" class="min"></div><div id="BathMax" class="max"></div>
                            </span>
                            <div id="slider-range-Bath"></div>
                        </div>
                        <div class="row">
                            <?php echo $this->Form->input('Search.square_footage.min', array('type' => 'hidden')); ?>
                            <?php echo $this->Form->input('Search.square_footage.max', array('type' => 'hidden')); ?>
                            <label class="block-label">Square Feet</label>
                            <span id="square_footage">
                                <div id="SqFtMin" class="min"></div><div id="SqFtMax" class="max"></div>
                            </span>
                            <div id="slider-range-SqFt"></div>
                        </div>
                    </div>
                </div>
                
                
  javascript from results.js
  
  $('#SearchSavedSearchId').on('change', function( ) {
    // just submit the form, because the sliders will have to be updated as well
    $(this).parents('form').submit( );
});              


// extend jquery ui accordion to allow multiple
// sections at once if the multiple option is true
$.extend($.ui.accordion.prototype.options, {multiple: false});
var _toggle = $.ui.accordion.prototype._toggle;
var _clickHandler = $.ui.accordion.prototype._clickHandler;
$.extend($.ui.accordion.prototype, {
    _toggle: function(toShow, toHide, data, clickedIsActive, down){
        if (this.options.collapsible && this.options.multiple && toShow.is(':visible')) {
            arguments[1] = arguments[0];
            arguments[3] = true;
        }
        else if (this.options.collapsible && this.options.multiple) {
            arguments[1] = $([]);
        }
        _toggle.apply(this,arguments);
        this.active
            .removeClass( 'ui-state-active ui-corner-top' )
            .addClass( 'ui-state-default ui-corner-all' )
    },
    _clickHandler: function(event, target){
        if ($(target).next().is(':visible:not(:animated)')) {
            this.active = $(target);
        }
        _clickHandler.apply(this,arguments)
    }
});

$('#accordion').accordion({
    autoHeight  : false,
    navigation  : false,
    icons       : false,
    collapsible : true,
    multiple    : true,
    active      : 1
});
$('#accordion div.s-title:eq(0), #accordion div.s-title:eq(1)').click( );

var sidebar, offset, topPadding = 10;

// On window load. This waits until images have loaded which is essential
$(window).load( function( ) {
    sidebar = $('.search-sidebar');
    offset = sidebar.offset( );
    $(window).scroll( function( ) {
        if ($(window).scrollTop() > $('.search-result-content').position( ).top) {
            sidebar.addClass('floating');
        }
        else {
            sidebar.removeClass('floating');
        }
    });
});


$('#SearchSort').on('change', function( ) {
    refresh_results( );
});

$('.search-category .checkbox input:checkbox').on('click', function( ) {
    refresh_results( );
});


/* Daily Prices */
if ('undefined' == typeof daily_rate_val) { var daily_rate_val = "0:2000"; }
var minPriceValue = 0;
var maxPriceValue = 1000;
$('#slider-range-price').slider({
    range: true,
    min: minPriceValue,
    max: maxPriceValue,
    step: 10,
    values: daily_rate_val.split(';'),
    slide: function( event, ui ) {
        $( '#SearchDailyRateMin' ).val( ui.values[ 0 ] );
        $( '#SearchDailyRateMax' ).val( ui.values[ 1 ] );
        $( '#dailyRateMin' ).text( '$' + ui.values[ 0 ] );

        if (ui.values[1] == maxPriceValue) {
            $( '#dailyRateMax' ).text( '$' + ui.values[ 1 ] + '+' );
        }
        else {
            $( '#dailyRateMax' ).text( '$' + ui.values[ 1 ] );
        }
    },
    change: function ( event, ui ) {
        refresh_results( );
    }
});

$( '#dailyRateMin' ).text( '$' + $('#slider-range-price').slider('values', 0) );
$( '#dailyRateMax' ).text( '$' + $('#slider-range-price').slider('values', 1) + (($('#slider-range-price').slider('values', 1) == maxPriceValue) ? '+' : '') );

/* Sq Ft Area */
if ('undefined' == typeof sq_foot_val) { var sq_foot_val = "500:25000"; }
var minSqFtValue = 500;
var maxSqFtValue = 12000;
$('#slider-range-SqFt').slider({
    range: true,
    min: minSqFtValue,
    max: maxSqFtValue,
    step: 100,
    values: sq_foot_val.split(';'),
    slide: function( event, ui ) {
        $( '#SearchSquareFootageMin' ).val( ui.values[ 0 ] );
        $( '#SearchSquareFootageMax' ).val( ui.values[ 1 ] );
        $( '#SqFtMin' ).text( ui.values[ 0 ] );

        if (ui.values[1] == maxSqFtValue) {
            $( '#SqFtMax' ).text( ui.values[ 1 ] + '+' );
        }
        else {
            $( '#SqFtMax' ).text( ui.values[ 1 ] );
        }
    },
    change: function ( event, ui ) {
        refresh_results( );
    }
});

$( '#SqFtMin' ).text( $('#slider-range-SqFt').slider('values', 0) );
$( '#SqFtMax' ).text( $('#slider-range-SqFt').slider('values', 1) + (($('#slider-range-SqFt').slider('values', 1) == maxSqFtValue) ? '+' : '') );

/* Bathroom */
if ('undefined' == typeof bath_val) { var bath_val = "1:10"; }
var minBathValue = 1;
var maxBathValue = 10;
$('#slider-range-Bath').slider({
    range: true,
    min: minBathValue,
    max: maxBathValue,
    step: 1,
    values: bath_val.split(';'),
    slide: function( event, ui ) {
        $( '#SearchBathroomsMin' ).val( ui.values[ 0 ] );
        $( '#SearchBathroomsMax' ).val( ui.values[ 1 ] );
        $( '#BathMin' ).text( ui.values[ 0 ] );

        if (ui.values[1] == maxBathValue) {
            $( '#BathMax' ).text( ui.values[ 1 ] + '+' );
        }
        else {
            $( '#BathMax' ).text( ui.values[ 1 ] );
        }
    },
    change: function ( event, ui ) {
        refresh_results( );
    }
});

$( '#BathMin' ).text( $('#slider-range-Bath').slider('values', 0) );
$( '#BathMax' ).text( $('#slider-range-Bath').slider('values', 1) + (($('#slider-range-Bath').slider('values', 1) == maxBathValue) ? '+' : '') );

/* Bedroom */
if ('undefined' == typeof bed_val) { var bed_val = "1:10"; }
var minBedValue = 1;
var maxBedValue = 10;
$('#slider-range-Bed').slider({
    range: true,
    min: minBedValue,
    max: maxBedValue,
    step: 1,
    values: bed_val.split(';'),
    slide: function( event, ui ) {
        $( '#SearchBedroomsMin' ).val( ui.values[ 0 ] );
        $( '#SearchBedroomsMax' ).val( ui.values[ 1 ] );
        $( '#BedMin' ).text( ui.values[ 0 ] );

        if (ui.values[1] == maxBedValue) {
            $( '#BedMax' ).text( ui.values[ 1 ] + '+' );
        }
        else {
            $( '#BedMax' ).text( ui.values[ 1 ] );
        }
    },
    change: function ( event, ui ) {
        refresh_results( );
    }
});

$( '#BedMin' ).text( $('#slider-range-Bed').slider('values', 0) );
$( '#BedMax' ).text( $('#slider-range-Bed').slider('values', 1) + (($('#slider-range-Bed').slider('values', 1) == maxBedValue) ? '+' : '') );


function AddToWishList(id) {
    $('#addToWishList_'+id).removeClass('wishlist-btn'); $('#addToWishList_'+id).addClass('wishlist-pre-loader'); $('#addToWishList_'+id).html('<span>&nbsp;Adding...</span>');
    $.ajax({
        url  :  addto_wishlist_url,
        type :  'Post',
        data :  {'property_id' : id},
        success : function(m) {
            if(m == true) {
                $('#addToWishList_'+id).attr('onclick','').unbind('click');
                $('#addToWishList_'+id).removeClass('wishlist-pre-loader');
                $('#addToWishList_'+id).addClass('wishlist-btn inactive');
                $('#addToWishList_'+id).html('<span>Add to wishlist</span>');
            }
        }
    });
}