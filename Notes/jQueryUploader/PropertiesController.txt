
//428
           
                if ( ! empty($this->request->data)) {
                    /*
                     * Checking maximum limit for file uploads
                     */
                    if ( ! isset($this->request->data['image_count'])) {
                        //$this->request->data['image_count'] = 0;
                        $this->request->data['image_count'] = (int) $this->Property->PropertyImage->find('count', array(
                            'conditions' => array(
                                    'PropertyImage.property_id' => $this->request->data['Property']['id'],
                            ),
                        ));
                    }

                /*  
                 * removed 8 image limit
                 * 
                    if ($this->request->data['image_count'] >= 8 ) {
                        $this->Session->setFlash(__('Maximum 8 files are allowed if you want to add more images please delete existing photos ', true), 'default', 'n');
                        $this->redirect(array('action' => 'create', 'photos', $this->request->data['Property']['id']));
                    }
            */  
                    $count_imgs = count($this->request->data['PropertyImage']) - $this->request->data['image_count'];
                    if ( ! empty($this->request->data['PropertyImage']['upload']['image']['error'])) {
                        $count_imgs--;
                    }

                    /*
                     * if no image is uploaded no need to proceed further
                     * so redirect to the page with a notice
                     */
                    if ( ! $count_imgs) {
                        $this->Session->setFlash(__('Please upload a photo', true), 'default', 'f');
                        $this->redirect(array('action' => 'create', 'photos', $this->request->data['Property']['id']));
                    }

                    if (isset($this->request->data['save_images'])) {
                        $tempVar = $this->request->data['save_images'];
                    }
                    /*
                     * if any invalid mimetypes are uploaded than show an error
                     * and redirect to the same page
                     */

                    if (isset($this->request->data['error'])) {
                        $this->Session->setFlash($this->request->data['error'], 'default', 'f');
                        $this->redirect(array('action' => 'create', 'photos', $this->request->data['Property']['id']));
                    }
                    


                    $full = $this->Property->PropertyImage->process($this->request->data);
                    unset($this->request->data['PropertyImage']);

                    if ($full) {
                        $this->Session->setFlash(__('Only 8 images allowed.', true), 'default', 's');
                        $this->redirect(array('action' => 'create', 'photos', $this->request->data['Property']['id']));
                    }


                    // test the number of images
                    $image_count = (int) $this->Property->PropertyImage->find('count', array(
                        'conditions' => array(
                            'PropertyImage.property_id' => $this->request->data['Property']['id'],
                        ),
                    ));

                    if ( ! $image_count) {
                        $this->Property->invalidate('images', 'You must upload at least one image');
                        $this->redirect(array('action' => 'create', 'photos', $this->request->data['Property']['id']));
                    }

                    // save these because Cake kills them when we read( )
                    $validation_errors = $this->Property->validationErrors;

                    $message = (($count_imgs > 1) ? 'Photos have ' : 'Photo has ') . 'been uploaded';
                    $this->Session->setFlash(__($message, true), 'default', 's');
                    $this->redirect(array('action' => 'create', 'photos', $this->request->data['Property']['id']));
                }
                
//491