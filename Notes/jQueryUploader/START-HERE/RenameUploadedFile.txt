
$seed = date('YmdHis');

renamed = strtolower($renamed);

METHOD 1

How to rename uploaded file, e.g using some meaningless file name with 
md5(time().$filename).$extension.
is there an option for this or it has to be implemented 
in the upload.php file?

EDIT:
I've managed to make it work. Here's the code:

private function handle_file_upload($uploaded_file, $name, $size, $type, $error) {
    $file = new stdClass();
    $file->name = basename(stripslashes($name));

            //checking for last occurrence of the '.' [dot] in file name
           // this is due to the problem that might occurs if the filename itself has dots in it
    $extension = strrchr($file->name, '.');
          //Here you can perform a basic extension check e.g. if($extension === '.jpg') do_something();

          // extracting file name only      
    $file_name_only= explode($extension , $file->name);
         // changing it to meaningless filename and adding extension
    $changed_name = md5(time().$file_name_only[0]).$extension ;



    $file->size = intval($size);
    $file->type = $type;
    $error = $this->has_error($uploaded_file, $file, $error);
    if (!$error && $changed_name) {
        if ($changed_name === '.') {
            $changed_name = substr($changed_name, 1);
        }


        $file_path = $this->options['upload_dir'].$changed_name;

        $append_file = is_file($file_path) && $file->size > filesize($file_path);
        clearstatcache();
        if ($uploaded_file && is_uploaded_file($uploaded_file)) {
            // multipart/formdata uploads (POST method uploads)
            if ($append_file) {
                file_put_contents(
                    $file_path,
                    fopen($uploaded_file, 'r'),
                    FILE_APPEND
                );
            } else {
                move_uploaded_file($uploaded_file, $file_path);
            }
        } else {
            // Non-multipart uploads (PUT method support)
            file_put_contents(
                $file_path,
                fopen('php://input', 'r'),
                $append_file ? FILE_APPEND : 0
            );
        }
        $file_size = filesize($file_path);
        if ($file_size === $file->size) {
            $file->url = $this->options['upload_url'].$changed_name;
            foreach($this->options['image_versions'] as $version => $options) {
                if ($this->create_scaled_image($file->name, $options)) {
                    $file->{$version.'_url'} = $options['upload_url']
                        .$changed_name;
                }
            }
        } else if ($this->options['discard_aborted_uploads']) {
            unlink($file_path);
            $file->error = 'abort';
        }
        $file->size = $file_size;
        $file->delete_url = $this->options['script_url']
            .'?file='.$changed_name;
        $file->delete_type = 'DELETE';
    } else {
        $file->error = $error;
    }
    return $file;
}


METHOD 2

private function handle_file_upload($uploaded_file, $name, $size, $type, $error) {
$file = new stdClass();
$name = $changed_name /* insert here your modifications */
$file->name = basename(stripslashes($name)); 

/* you can leave the rest of the function unchanged as in
 the original function */

}